{"ast":null,"code":"import _createForOfIteratorHelper from\"C:\\\\Users\\\\Pramod\\\\Desktop\\\\To-Do-List\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createForOfIteratorHelper.js\";import _toConsumableArray from\"C:\\\\Users\\\\Pramod\\\\Desktop\\\\To-Do-List\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";import _slicedToArray from\"C:\\\\Users\\\\Pramod\\\\Desktop\\\\To-Do-List\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import React,{useState}from'react';import NewTask from'./Componets/NewTask';import TaskList from'./Componets/TaskList';import TaskHeader from'./Componets/TaskHeader/TaskHeader';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState([{taskTitle:\"Learn React\",taskDaysLeft:\"13\",isMarked:false}]),_useState2=_slicedToArray(_useState,2),toDoList=_useState2[0],setToDoList=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),overlay=_useState4[0],setOverlay=_useState4[1];var newTaskHandler=function newTaskHandler(taskObj){setToDoList(function(prev){return[taskObj].concat(_toConsumableArray(prev));});};var selectedHandler=function selectedHandler(taskTitle){var _iterator=_createForOfIteratorHelper(toDoList),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var obj=_step.value;if(obj.taskTitle===taskTitle){obj.isMarked^=true;}}}catch(err){_iterator.e(err);}finally{_iterator.f();}setToDoList(toDoList);};var taskOverlayHandler=function taskOverlayHandler(val){setOverlay(val);};var deleteHandler=function deleteHandler(toDoList){setToDoList(toDoList);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(TaskHeader,{onNewTask:taskOverlayHandler,onDeletedMarked:deleteHandler,allTasks:toDoList}),overlay&&/*#__PURE__*/_jsx(NewTask,{onNewTask:taskOverlayHandler,onSaveNewTask:newTaskHandler,allTasks:toDoList}),/*#__PURE__*/_jsx(TaskList,{onSaveSelected:selectedHandler,allTasks:toDoList})]});}export default App;","map":{"version":3,"sources":["C:/Users/Pramod/Desktop/To-Do-List/src/App.js"],"names":["React","useState","NewTask","TaskList","TaskHeader","App","taskTitle","taskDaysLeft","isMarked","toDoList","setToDoList","overlay","setOverlay","newTaskHandler","taskObj","prev","selectedHandler","obj","taskOverlayHandler","val","deleteHandler"],"mappings":"saAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,MAAOC,CAAAA,OAAP,KAAoB,qBAApB,CACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,mCAAvB,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACb,cAAgCJ,QAAQ,CAAC,CAAC,CAACK,SAAS,CAAC,aAAX,CAA0BC,YAAY,CAAC,IAAvC,CAA6CC,QAAQ,CAAC,KAAtD,CAAD,CAAD,CAAxC,wCAAOC,QAAP,eAAiBC,WAAjB,eACA,eAA8BT,QAAQ,CAAC,KAAD,CAAtC,yCAAOU,OAAP,eAAgBC,UAAhB,eAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,OAAD,CAAa,CAClCJ,WAAW,CAAE,SAAAK,IAAI,SAAKD,OAAL,4BAAiBC,IAAjB,IAAN,CAAX,CACD,CAFD,CAGA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACV,SAAD,CAAe,0CACtBG,QADsB,YACrC,+CAAwB,IAAhBQ,CAAAA,GAAgB,aACtB,GAAGA,GAAG,CAACX,SAAJ,GAAkBA,SAArB,CAA+B,CAC7BW,GAAG,CAACT,QAAJ,EAAgB,IAAhB,CACD,CACF,CALoC,qDAMrCE,WAAW,CAACD,QAAD,CAAX,CACD,CAPD,CAQA,GAAMS,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,GAAD,CAAS,CAClCP,UAAU,CAACO,GAAD,CAAV,CACD,CAFD,CAGA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACX,QAAD,CAAc,CAClCC,WAAW,CAACD,QAAD,CAAX,CACD,CAFD,CAIA,mBACE,oCACE,KAAC,UAAD,EAAY,SAAS,CAAES,kBAAvB,CAA2C,eAAe,CAAEE,aAA5D,CAA2E,QAAQ,CAAEX,QAArF,EADF,CAEGE,OAAO,eAAI,KAAC,OAAD,EAAS,SAAS,CAAEO,kBAApB,CAAwC,aAAa,CAAEL,cAAvD,CAAuE,QAAQ,CAAEJ,QAAjF,EAFd,cAGE,KAAC,QAAD,EAAU,cAAc,CAAEO,eAA1B,CAA2C,QAAQ,CAAEP,QAArD,EAHF,GADF,CAOD,CAED,cAAeJ,CAAAA,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport NewTask from './Componets/NewTask';\nimport TaskList from './Componets/TaskList';\nimport TaskHeader from './Componets/TaskHeader/TaskHeader';\n\nfunction App() {\n  const [toDoList, setToDoList] = useState([{taskTitle:\"Learn React\", taskDaysLeft:\"13\", isMarked:false}]);\n  const [overlay, setOverlay] = useState(false);\n\n  const newTaskHandler = (taskObj) => {\n    setToDoList( prev => [taskObj, ...prev]);\n  }\n  const selectedHandler = (taskTitle) => {\n    for(let obj of toDoList){\n      if(obj.taskTitle === taskTitle){\n        obj.isMarked ^= true;\n      }\n    }\n    setToDoList(toDoList)\n  }\n  const taskOverlayHandler = (val) => {\n    setOverlay(val);\n  }\n  const deleteHandler = (toDoList) => {\n    setToDoList(toDoList);\n  }\n\n  return (\n    <div>\n      <TaskHeader onNewTask={taskOverlayHandler} onDeletedMarked={deleteHandler} allTasks={toDoList} />\n      {overlay && <NewTask onNewTask={taskOverlayHandler} onSaveNewTask={newTaskHandler} allTasks={toDoList} />}\n      <TaskList onSaveSelected={selectedHandler} allTasks={toDoList} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}