{"ast":null,"code":"import Card from'./UI/Card';import TaskItem from'./TaskItem';import'./TaskList.css';import{jsx as _jsx}from\"react/jsx-runtime\";var TaskList=function TaskList(props){var toDoList=props.allTasks;var isSelected=function isSelected(taskTitle){props.onSaveSelected(taskTitle);};var renderItem=toDoList.map(function(e){return/*#__PURE__*/_jsx(TaskItem,{onSelected:isSelected,title:e.taskTitle,daysLeft:e.taskDaysLeft},\"\".concat(e.id));});if(toDoList.length===0){renderItem=/*#__PURE__*/_jsx(\"h1\",{className:\"no-task\",children:\"No Tasks Found!\"});}return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(\"div\",{className:\"task-list-container\",children:renderItem})});};export default TaskList;","map":{"version":3,"sources":["C:/Users/Pramod/Desktop/To-Do-List/src/Componets/TaskList.js"],"names":["Card","TaskItem","TaskList","props","toDoList","allTasks","isSelected","taskTitle","onSaveSelected","renderItem","map","e","taskDaysLeft","id","length"],"mappings":"AAAA,MAAOA,CAAAA,IAAP,KAAiB,WAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CAEA,MAAO,gBAAP,C,2CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CACxB,GAAMC,CAAAA,QAAQ,CAAGD,KAAK,CAACE,QAAvB,CACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,SAAD,CAAe,CAC9BJ,KAAK,CAACK,cAAN,CAAqBD,SAArB,EACH,CAFD,CAGA,GAAIE,CAAAA,UAAU,CAAGL,QAAQ,CAACM,GAAT,CAAc,SAAAC,CAAC,qBAAI,KAAC,QAAD,EAAU,UAAU,CAAEL,UAAtB,CAAkD,KAAK,CAAEK,CAAC,CAACJ,SAA3D,CAAsE,QAAQ,CAAEI,CAAC,CAACC,YAAlF,YAA0CD,CAAC,CAACE,EAA5C,EAAJ,EAAf,CAAjB,CACA,GAAGT,QAAQ,CAACU,MAAT,GAAoB,CAAvB,CAAyB,CACrBL,UAAU,cAAG,WAAI,SAAS,CAAC,SAAd,6BAAb,CACH,CACD,mBACI,KAAC,IAAD,wBACI,YAAK,SAAS,CAAC,qBAAf,UACKA,UADL,EADJ,EADJ,CAOH,CAhBD,CAkBA,cAAeP,CAAAA,QAAf","sourcesContent":["import Card from './UI/Card';\r\nimport TaskItem from './TaskItem';\r\n\r\nimport './TaskList.css';\r\n\r\nconst TaskList = (props) => {\r\n    const toDoList = props.allTasks;\r\n    const isSelected = (taskTitle) => {\r\n        props.onSaveSelected(taskTitle);\r\n    }\r\n    let renderItem = toDoList.map( e => <TaskItem onSelected={isSelected} key={`${e.id}`} title={e.taskTitle} daysLeft={e.taskDaysLeft} /> );\r\n    if(toDoList.length === 0){\r\n        renderItem = <h1 className='no-task'>No Tasks Found!</h1>\r\n    }\r\n    return (\r\n        <Card>\r\n            <div className='task-list-container'>\r\n                {renderItem}\r\n            </div>\r\n        </Card>\r\n    ); \r\n}\r\n\r\nexport default TaskList;"]},"metadata":{},"sourceType":"module"}