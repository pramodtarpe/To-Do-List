{"version":3,"sources":["Componets/NewTask.module.css","Componets/UI/Card.module.css","Componets/UI/Card.js","Componets/TaskForm/TaskForm.js","Componets/NewTask.js","Componets/TaskItem.js","Componets/TaskList.js","Componets/TaskHeader/TaskHeader.js","App.js","index.js"],"names":["module","exports","Card","props","className","cssCard","card","children","TaskForm","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","useState","taskName","setTaskName","taskDate","setTaskDate","onSubmit","event","preventDefault","trim","length","date2","Difference_In_Days","getTime","toLocaleDateString","taskId","string","hash","i","charCodeAt","hashId","taskObj","id","taskTitle","taskDaysLeft","parseInt","isMarked","toDoList","console","log","onSaveTaskForm","onClose","forhtml","type","value","onChange","target","min","NewTask","classes","backdrop","onClick","onNewTask","onSaveNewTask","allTasks","TaskItem","isSelected","setSelected","stopPropagation","onSelected","title","style","visibility","textDecoration","daysLeft","TaskList","onSaveSelected","renderItem","map","e","TaskHeader","filter","onDeletedMarked","App","setToDoList","overlay","setOverlay","taskOverlayHandler","val","prev","obj","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.742cd578.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"NewTask_backdrop__3W_uN\",\"task-form-container\":\"NewTask_task-form-container__1qkyn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2zX8D\"};","import cssCard from './Card.module.css';\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className={`${cssCard.card} ${props.className}`}>{props.children}</div>\r\n    );\r\n\r\n}\r\n\r\nexport default Card;","import React, { useState } from \"react\";\r\n\r\nimport './TaskForm.css'\r\n\r\nconst hashId = (string) => {\r\n    let MOD = 18446744073709551617;\r\n    let hash = 0;\r\n    if (string.length === 0) return hash;\r\n    for (let i = 0; i < string.length; i++) {\r\n        let char = string.charCodeAt(i);\r\n        hash = ((hash*257) + (char)) % MOD;\r\n    }\r\n    return hash;\r\n}\r\n\r\nconst TaskForm = (props) => {\r\n    var today = new Date();\r\n    var dd = String(today.getDate()).padStart(2, '0');\r\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n    today = yyyy + '-' + mm + '-' + dd;\r\n\r\n    const [taskName, setTaskName] = useState('');\r\n    const [taskDate, setTaskDate] = useState(today);\r\n    \r\n    const formHandler = (event) => {\r\n        event.preventDefault();\r\n        if(taskName.trim().length === 0) return;\r\n        const date2 = new Date();\r\n        const Difference_In_Time = (new Date(taskDate)).getTime() - (new Date(date2.toLocaleDateString()).getTime());\r\n        const Difference_In_Days = Difference_In_Time / (1000 * 3600 * 24);\r\n        const taskId = hashId(taskName);\r\n        const taskObj = {id:taskId, taskTitle: taskName, taskDaysLeft: parseInt(Difference_In_Days), isMarked:false};\r\n\r\n        for(let obj of props.toDoList){\r\n            if(obj.id === taskId){\r\n                console.log('Task with same id already exits');\r\n                return;\r\n            } \r\n        }\r\n        props.onSaveTaskForm(taskObj);\r\n        setTaskName('');\r\n        setTaskDate(today);\r\n        props.onClose(false);\r\n    }\r\n\r\n    const taskNameChangeHandler = (event) => {\r\n        setTaskName(event.target.value);\r\n    }\r\n    const taskDateChangeHandler = (event) => {\r\n        setTaskDate(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className='form-container'>\r\n            <form onSubmit={formHandler}>   \r\n                <div className='form-input__control'>\r\n                    <div>\r\n                        <label forhtml=\"taskname\">Task name</label>\r\n                        <input id=\"taskname\" type=\"text\" value={taskName} onChange={taskNameChangeHandler}></input>\r\n                    </div>\r\n                    <div>\r\n                        <label forhtml=\"taskdate\">Task date</label>\r\n                        <input id=\"taskdate\" type=\"date\" min={taskDate} value={taskDate} onChange={taskDateChangeHandler}></input>\r\n                    </div>\r\n                </div>\r\n                <div className='btn'>\r\n                    <button className='btn-tag' type=\"submit\"><h1>Add task</h1></button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskForm;","import Card from './UI/Card';\r\nimport TaskForm from './TaskForm/TaskForm';\r\nimport classes from './NewTask.module.css';\r\n\r\nconst NewTask = (props) => {\r\n    const formHandler = (taskObj) => {\r\n        props.onSaveNewTask(taskObj);\r\n    }\r\n    const closeHandler = () => {\r\n        props.onNewTask(false);\r\n    }\r\n    const aaa = () => {\r\n        props.onNewTask(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.backdrop} onClick={props.onNewTask} ></div>\r\n            <Card className={classes['task-form-container']}>\r\n                <TaskForm onClose={closeHandler} onSaveTaskForm={formHandler} toDoList={props.allTasks}/>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewTask;","import { useState } from 'react';\r\nimport './TaskItem.css'\r\n\r\nconst TaskItem = (props) => {\r\n    const [isSelected, setSelected] = useState(false);\r\n\r\n    const taskItemHandler = (event) => {\r\n        event.stopPropagation();\r\n        setSelected(isSelected^true);\r\n        props.onSelected(props.title);\r\n    }\r\n    const editHandler = (event) => {\r\n        event.stopPropagation();\r\n        \r\n    }\r\n    \r\n    return (\r\n        <div className={`task-item-container ${isSelected && \"task-item-container-selected\"}`} onClick={taskItemHandler}>\r\n            <div className='task-item-checkbox'>\r\n                <i className=\"fas fa-check-circle checkbox\" style={isSelected ? {} : {visibility:'hidden'}} ></i>\r\n            </div>\r\n            <div className='task-data-container'>\r\n                <div className='task-title' style={!isSelected ? {} : {textDecoration:'underline'}} >\r\n                    {props.title}\r\n                </div>\r\n                <div className='task-btn-container'>\r\n                    <div className='edit-task-title' onClick={editHandler}>\r\n                        <i className=\"fas fa-edit\"></i>\r\n                    </div>\r\n                    <div className='task-item-days-left' type=\"button\" >{props.daysLeft + \" Days left\"}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskItem;","import Card from './UI/Card';\r\nimport TaskItem from './TaskItem';\r\n\r\nimport './TaskList.css';\r\n\r\nconst TaskList = (props) => {\r\n    const toDoList = props.allTasks;\r\n    const isSelected = (taskTitle) => {\r\n        props.onSaveSelected(taskTitle);\r\n    }\r\n    let renderItem = toDoList.map( e => <TaskItem onSelected={isSelected} key={`${e.id}`} title={e.taskTitle} daysLeft={e.taskDaysLeft} /> );\r\n    if(toDoList.length === 0){\r\n        renderItem = <h1 className='no-task'>No Tasks Found!</h1>\r\n    }\r\n    return (\r\n        <Card>\r\n            <div className='task-list-container'>\r\n                {renderItem}\r\n            </div>\r\n        </Card>\r\n    ); \r\n}\r\n\r\nexport default TaskList;","import Card from '../UI/Card';\r\nimport './TaskHeader.css';\r\n\r\nconst TaskHeader = (props) => {\r\n    const deleteHandler = () => {\r\n        const toDoList = props.allTasks.filter( e => e.isMarked === false );\r\n        props.onDeletedMarked(toDoList);\r\n    }\r\n    const newTaskHandler = () => {\r\n        props.onNewTask(true);\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <div className='header-container'>\r\n                <h1 className='header-title'>TO - DO LIST</h1>\r\n                <div className='header-button-container'>\r\n                    <button className='header-button header-button-left' type='button' onClick={newTaskHandler} >Add New Task</button>\r\n                    <button className='header-button' type='button' onClick={deleteHandler} >Delete Selected</button>\r\n                </div>\r\n            </div>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default TaskHeader;","import React, { useState } from 'react';\n\nimport NewTask from './Componets/NewTask';\nimport TaskList from './Componets/TaskList';\nimport TaskHeader from './Componets/TaskHeader/TaskHeader';\n\nfunction App() {\n  const [toDoList, setToDoList] = useState([{taskTitle:\"Learn React\", taskDaysLeft:\"13\", isMarked:false}]);\n  const [overlay, setOverlay] = useState(false);\n\n  const newTaskHandler = (taskObj) => {\n    setToDoList( prev => [taskObj, ...prev]);\n  }\n  const selectedHandler = (taskTitle) => {\n    for(let obj of toDoList){\n      if(obj.taskTitle === taskTitle){\n        obj.isMarked = !obj.isMarked;\n      }\n    }\n    setToDoList(toDoList);\n  }\n  const taskOverlayHandler = (val) => {\n    val = (val===true ? val : false)\n    setOverlay(val);\n  }\n  const deleteHandler = (toDoList) => {\n    setToDoList(toDoList);\n  }\n\n  return (\n    <div>\n      <TaskHeader onNewTask={taskOverlayHandler} onDeletedMarked={deleteHandler} allTasks={toDoList} />\n      {overlay && <NewTask onNewTask={taskOverlayHandler} onSaveNewTask={newTaskHandler} allTasks={toDoList} />}\n      <TaskList onSaveSelected={selectedHandler} allTasks={toDoList} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}