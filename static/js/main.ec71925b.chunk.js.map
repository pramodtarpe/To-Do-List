{"version":3,"sources":["Componets/TaskList.module.css","Componets/NewTask.module.css","Componets/UI/Card.module.css","Componets/UI/Card.js","Componets/TaskForm/TaskForm.js","Componets/NewTask.js","Componets/TaskItem.js","Componets/TaskListHelp.js","Componets/TaskOption/TaskFilter.js","Componets/TaskOption/TaskSort.js","Componets/TaskOption/TaskOption.js","Componets/TaskList.js","Componets/TaskHeader/TaskHeader.js","App.js","index.js"],"names":["module","exports","Card","props","className","cssCard","card","children","TaskForm","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","useState","taskName","setTaskName","taskDate","setTaskDate","isTitleValid","setIsTitleValid","onSubmit","event","preventDefault","trim","length","setTimeout","date2","Difference_In_Days","getTime","toLocaleDateString","taskId","string","hash","i","charCodeAt","hashId","taskObj","id","taskTitle","taskDaysLeft","parseInt","isMarked","isDone","toDoList","onSaveTaskForm","onClose","forhtml","type","value","placeholder","onChange","target","min","disabled","NewTask","classes","backdrop","onClick","onNewTask","onSaveNewTask","allTasks","TaskItem","isSelected","setSelected","taskItemHandler","stopPropagation","onSelected","title","style","fontSize","color","visibility","daysLeft","TaskListHelp","styles","TaskFilter","taskFilterValue","setTaskFilterValue","onTaskOption","fval","sortFilterValue","setSortFilterValue","sval","filterList","obj","list","filter","e","sortList","sort","a","b","toLowerCase","TaskOption","taskOptionValue","setTaskOptionValue","taskOptionHandler","prevState","onTaskOptionObject","TaskSort","TaskList","taskOptionObject","setTaskOptionObject","filteredSortedList","setFilteredSortedList","onSaveSelected","useEffect","Fragment","map","TaskHeader","onDeletedMarked","onMarkAsDone","App","setToDoList","overlay","setOverlay","taskOverlayHandler","val","prev","selectedList","ReactDOM","render","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,iBAAiB,iCAAiC,sBAAsB,sCAAsC,UAAU,0BAA0B,gBAAgB,kC,oCCApLD,EAAOC,QAAU,CAAC,SAAW,0BAA0B,sBAAsB,uC,iBCA7ED,EAAOC,QAAU,CAAC,KAAO,qB,2MCQVC,EAPF,SAACC,GACV,OACI,qBAAKC,UAAS,UAAKC,IAAQC,KAAb,YAAqBH,EAAMC,WAAzC,SAAuDD,EAAMI,YCiGtDC,G,MAtFE,SAACL,GACd,IAAIM,EAAQ,IAAIC,KACZC,EAAKC,OAAOH,EAAMI,WAAWC,SAAS,EAAG,KACzCC,EAAKH,OAAOH,EAAMO,WAAa,GAAGF,SAAS,EAAG,KAC9CG,EAAOR,EAAMS,cACjBT,EAAQQ,EAAO,IAAMF,EAAK,IAAMJ,EAEhC,MAAgCQ,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAASV,GAAzC,mBAAOa,EAAP,KAAiBC,EAAjB,KACA,EAAwCJ,oBAAS,GAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KAiDA,OACI,qBAAKrB,UAAU,iBAAf,SACI,uBAAMsB,SAjDM,SAACC,GAEjB,GADAA,EAAMC,iBACwB,IAA3BR,EAASS,OAAOC,OAOf,OANAL,GAAgB,GAChBJ,EAAY,uBACZU,YAAW,WACPV,EAAY,IACZI,GAAgB,KAClB,KAGN,IAX2B,EAWrBO,EAAQ,IAAItB,KAEZuB,GADsB,IAAIvB,KAAKY,GAAWY,UAAa,IAAIxB,KAAKsB,EAAMG,sBAAsBD,WACrD,MACvCE,EApCC,SAACC,GACZ,IACIC,EAAO,EACX,GAAsB,IAAlBD,EAAOP,OAAc,OAAOQ,EAChC,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAOP,OAAQS,IAE/BD,GAAc,IAALA,EADED,EAAOG,WAAWD,IAJvB,oBAOV,OAAOD,EA4BYG,CAAOrB,GAEhBsB,EAAU,CAACC,GAAGP,EAChBQ,UAAWxB,EACXyB,aAAcC,SAASb,GACvBc,UAAS,EACTC,QAAO,GApBgB,cAuBZ7C,EAAM8C,UAvBM,IAuB3B,IAAI,EAAJ,qBAA8B,CAC1B,GAD0B,QACnBN,KAAOP,EAOV,OANAX,GAAgB,GAChBJ,EAAY,2BACZU,YAAW,WACPV,EAAY,IACZI,GAAgB,KAClB,MA9BiB,8BAkC3BtB,EAAM+C,eAAeR,GACrBrB,EAAY,IACZE,EAAYd,GACZN,EAAMgD,SAAQ,IAYV,UACI,sBAAK/C,UAAU,sBAAf,UACI,gCACI,uBAAOgD,QAAQ,WAAf,uBACA,uBACIhD,UAAS,UAAKoB,EAAe,qBAAqB,IAClDmB,GAAG,WACHU,KAAK,OACLC,MAAOlC,EACPmC,YAAY,mBACZC,SAnBM,SAAC7B,GAC3BN,EAAYM,EAAM8B,OAAOH,aAqBb,gCACI,uBAAOF,QAAQ,WAAf,sBACA,uBAAOT,GAAG,WAAWU,KAAK,OAAOK,IAAKpC,EAAUgC,MAAOhC,EAAUkC,SArBvD,SAAC7B,GAC3BJ,EAAYI,EAAM8B,OAAOH,gBAuBjB,qBAAKlD,UAAU,MAAf,SACI,wBAAQA,UAAS,kBAAaoB,EAAe,eAAe,IAAMmC,SAAUnC,EAAc6B,KAAK,SAA/F,SAAwG,gD,iBCxE7GO,EAlBC,SAACzD,GAQb,OACI,gCACI,qBAAKC,UAAWyD,IAAQC,SAAUC,QAAS5D,EAAM6D,YACjD,cAAC,EAAD,CAAM5D,UAAWyD,IAAQ,uBAAzB,SACI,cAAC,EAAD,CAAUV,QARD,WACjBhD,EAAM6D,WAAU,IAOyBd,eAXzB,SAACR,GACjBvC,EAAM8D,cAAcvB,IAUkDO,SAAU9C,EAAM+D,iB,OCiC/EC,G,MA9CE,SAAChE,GACd,MAAkCgB,oBAAS,GAA3C,mBAAOiD,EAAP,KAAmBC,EAAnB,KACMC,EAAkB,SAAC3C,GACrBA,EAAM4C,kBACNF,GAAaD,GACbjE,EAAMqE,WAAWrE,EAAMsE,QAGFtE,EAAMsE,MAmC/B,OAlCGtE,EAAM6C,OAED,sBAAK5C,UAAS,uDAAkDD,EAAM4C,UAAY,qCAAuCgB,QAASO,EAAlI,UACA,qBAAKlE,UAAU,qBAAf,SACI,mBAAGA,UAAU,sBAAsBsE,MAAOvE,EAAM4C,SAAW,CAAC4B,SAAS,OAAOC,MAAM,SAAW,CAACC,WAAW,cAE7G,sBAAKzE,UAAU,sBAAf,UACI,qBAAKA,UAAU,aAAf,SACKD,EAAMsE,QAEX,qBAAKrE,UAAU,qBAAf,SACI,qBAAKA,UAAU,sBAAf,SAAsC,iBAQ9C,sBAAKA,UAAS,8BAAyBgE,GAAe,gCAAkCL,QAASO,EAAjG,UACA,qBAAKlE,UAAU,qBAAf,SACI,mBAAGA,UAAU,+BAA+BsE,MAAON,EAAa,GAAK,CAACS,WAAW,cAErF,sBAAKzE,UAAU,sBAAf,UACI,qBAAKA,UAAU,aAAf,SACKD,EAAMsE,QAEX,qBAAKrE,UAAU,qBAAf,SACI,qBAAKA,UAAU,sBAAf,SAAsCD,EAAM2E,SAAW,yB,gBClB5DC,EApBM,WACjB,OACI,qCACI,oBAAI3E,UAAW4E,IAAO,WAAtB,6BACA,oBAAG5E,UAAW4E,IAAO,iBAArB,gGAES,mBAAG5E,UAAU,uBAFtB,iDAGI,uBACA,uBAJJ,mFAMU,mBAAGA,UAAU,wBANvB,iDAOI,uBACA,uBARJ,+EAUa,mBAAGA,UAAS,0BAVzB,wDCkBG6E,G,MApBI,SAAC9E,GAChB,MAA8CgB,mBAAS,OAAvD,mBAAO+D,EAAP,KAAwBC,EAAxB,KAOA,OACI,sBAAK/E,UAAU,wBAAf,UACI,uBAAOA,UAAU,eAAegD,QAAQ,aAAxC,oBACA,yBAAQT,GAAG,cAAcW,MAAO4B,EAAiB1B,SARnC,SAAC7B,GACnBwD,EAAmBxD,EAAM8B,OAAOH,OAChCnD,EAAMiF,aAAa,CAACC,KAAK1D,EAAM8B,OAAOH,SAMlC,UACI,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,eAAd,0BACA,wBAAQA,MAAM,eAAd,kCCKD2B,EApBI,SAAC9E,GAChB,MAA8CgB,mBAAS,gBAAvD,mBAAOmE,EAAP,KAAwBC,EAAxB,KAOA,OACI,sBAAKnF,UAAU,sBAAf,UACI,uBAAOA,UAAU,eAAegD,QAAQ,aAAxC,kBACA,yBAAQT,GAAG,YAAYW,MAAOgC,EAAiB9B,SARnC,SAAC7B,GACjB4D,EAAmB5D,EAAM8B,OAAOH,OAChCnD,EAAMiF,aAAa,CAACI,KAAK7D,EAAM8B,OAAOH,SAMlC,UACI,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,eAAd,iCCVHmC,EAAa,SAACC,EAAKC,GAO5B,MANgB,iBAAbD,EAAIL,KACHM,EAAOA,EAAKC,QAAO,SAAAC,GAAC,OAAiB,IAAbA,EAAE7C,UAET,iBAAb0C,EAAIL,OACRM,EAAOA,EAAKC,QAAO,SAAAC,GAAC,OAAiB,IAAbA,EAAE7C,WAEvB2C,GAEEG,EAAW,SAACJ,EAAKC,GAO1B,MANgB,SAAbD,EAAIF,KACHG,EAAKI,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEpD,UAAUsD,cAAgBD,EAAErD,UAAUsD,eAAkB,EAAI,KAElE,cAAbR,EAAIF,MACRG,EAAKI,MAAK,SAACC,EAAGC,GAAJ,OAAYD,EAAEnD,cAAgBoD,EAAEpD,cAAiB,EAAI,KAE5D8C,GAmBIQ,EAhBI,SAAChG,GAChB,MAA8CgB,mBAAS,CAACkE,KAAK,MAAOG,KAAK,iBAAzE,mBAAOY,EAAP,KAAwBC,EAAxB,KAEMC,EAAoB,SAACZ,GACvBW,GAAmB,SAACE,GAAD,mBAAC,eAAmBA,GAAcb,MACrDvF,EAAMqG,mBAAN,2BAA6BJ,GAAoBV,KAGrD,OACI,eAAC,EAAD,CAAMtF,UAAU,mBAAhB,UACI,cAAC,EAAD,CAAYgF,aAAckB,IAC1B,cAACG,EAAD,CAAUrB,aAAckB,QCiBrBI,EA/CE,SAACvG,GACd,MAAgDgB,mBAAS,CAACkE,KAAK,MAAOG,KAAK,iBAA3E,mBAAOmB,EAAP,KAAyBC,EAAzB,KACA,EAAoDzF,mBAAShB,EAAM+D,UAAnE,mBAAO2C,EAAP,KAA2BC,EAA3B,KAEM1C,EAAa,SAACxB,GAChBzC,EAAM4G,eAAenE,IAkBzB,OARAoE,qBAAU,WACN,IAAI/D,EAAQ,YAAO9C,EAAM+D,UACzBjB,EAAWwC,EAAWkB,EAAkB1D,GACxCA,EAAW6C,EAASa,EAAkB1D,GACtC6D,EAAsB7D,KAEzB,CAAC9C,EAAM+D,WAGJ,eAAC,IAAM+C,SAAP,WACI,cAAC,EAAD,CAAYT,mBAlBY,SAACd,GAC7BkB,EAAoB,2BAAID,GAAqBjB,IAC7CA,EAAG,2BAAOiB,GAAqBjB,GAC/B,IAAIzC,EAAQ,YAAO9C,EAAM+D,UACzBjB,EAAWwC,EAAWC,EAAKzC,GAC3BA,EAAW6C,EAASJ,EAAKzC,GACzB6D,EAAsB7D,MAalB,cAAC,EAAD,CAAO7C,UAAW4E,IAAO,kBAAzB,SACI,qBAAK5E,UAAW4E,IAAO,uBAAvB,SAEkC,IAA1B7E,EAAM+D,SAASpC,OACf,cAAC,EAAD,IAEA+E,EAAmBK,KAAK,SAAArB,GAAC,OAAI,cAAC,EAAD,CACzBrB,WAAYJ,EAEZK,MAAOoB,EAAEjD,UACTkC,SAAUe,EAAEhD,aACZG,OAAQ6C,EAAE7C,OACVD,SAAU8C,EAAE9C,UANa,UAEjB8C,EAAElD,gBCCvBwE,G,MAvCI,SAAChH,GAmBhB,OACI,cAAC,EAAD,CAAMC,UAAU,mBAAhB,SACI,sBAAKA,UAAU,mBAAf,UACI,oBAAIA,UAAU,eAAd,0BACA,sBAAKA,UAAU,0BAAf,UACI,wBAAQA,UAAU,gBAAgBiD,KAAK,SAASU,QAnBzC,WACnB5D,EAAM6D,WAAU,IAkBJ,SACI,mBAAGS,MAAM,eAAerE,UAAU,yBAEtC,wBAAQA,UAAU,gBAAgBiD,KAAK,SAASU,QA1B1C,WAClB,IAAMd,EAAW9C,EAAM+D,SAAS0B,QAAQ,SAAAC,GAAC,OAAmB,IAAfA,EAAE9C,YAC/C5C,EAAMiH,gBAAgBnE,IAwBV,SACI,mBAAGwB,MAAM,wBAAwBrE,UAAU,0BAE/C,wBAAQA,UAAU,gBAAgBiD,KAAK,SAASU,QAtBtC,WACtB,IAD4B,EACxBd,EAAQ,YAAO9C,EAAM+D,UADG,cAEbjB,GAFa,IAE5B,IAAI,EAAJ,qBAAwB,CAAC,IAAjByC,EAAgB,SACA,IAAjBA,EAAI3C,WACH2C,EAAI1C,QAAS,EACb0C,EAAI3C,UAAW,IALK,8BAQ5B5C,EAAMkH,aAAapE,IAcP,SACI,mBAAGwB,MAAM,wBAAwBrE,UAAU,sCCQpDkH,MApCf,WACE,MAAgCnG,mBAAS,CAAC,CAACyB,UAAU,cAAeC,aAAa,GAAIE,UAAS,EAAOC,QAAO,KAA5G,mBAAOC,EAAP,KAAiBsE,EAAjB,KACA,EAA8BpG,oBAAS,GAAvC,mBAAOqG,EAAP,KAAgBC,EAAhB,KAcMC,EAAqB,SAACC,GAE1BF,EADAE,GAAa,IAANA,GAAaA,IAUtB,OACE,gCACE,cAAC,EAAD,CAAY3D,UAAW0D,EAAoBN,gBATzB,SAACnE,GACrBsE,EAAYtE,IAQiEoE,aANrD,SAACpE,GACzBsE,EAAYtE,IAKkGiB,SAAUjB,IACrHuE,GAAW,cAAC,EAAD,CAASxD,UAAW0D,EAAoBzD,cA1BjC,SAACvB,GACtB6E,GAAa,SAAAK,GAAI,OAAKlF,GAAL,mBAAiBkF,QAyBmD1D,SAAUjB,IAC7F,cAAC,EAAD,CAAU8D,eAxBU,SAACnE,GACvB,IADqC,EAC/BiF,EAAY,YAAO5E,GADY,cAEtB4E,GAFsB,IAErC,IAAI,EAAJ,qBAA4B,CAAC,IAArBnC,EAAoB,QACvBA,EAAI9C,YAAcA,IACnB8C,EAAI3C,UAAY2C,EAAI3C,WAJa,8BAOrCwE,EAAYM,IAiBiC3D,SAAUjB,QC/B3D6E,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ec71925b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"task-list-card\":\"TaskList_task-list-card__95RAJ\",\"task-list-container\":\"TaskList_task-list-container__2Cn1x\",\"no-task\":\"TaskList_no-task__VGpDd\",\"no-task-guide\":\"TaskList_no-task-guide__2Pbus\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"NewTask_backdrop__3W_uN\",\"task-form-container\":\"NewTask_task-form-container__1qkyn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2zX8D\"};","import cssCard from './Card.module.css';\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className={`${cssCard.card} ${props.className}`}>{props.children}</div>\r\n    );\r\n\r\n}\r\n\r\nexport default Card;","import React, { useState } from \"react\";\r\n\r\nimport './TaskForm.css'\r\n\r\nconst hashId = (string) => {\r\n    let MOD = 18446744073709551617;\r\n    let hash = 0;\r\n    if (string.length === 0) return hash;\r\n    for (let i = 0; i < string.length; i++) {\r\n        let char = string.charCodeAt(i);\r\n        hash = ((hash*257) + (char)) % MOD;\r\n    }\r\n    return hash;\r\n}\r\n\r\nconst TaskForm = (props) => {\r\n    var today = new Date();\r\n    var dd = String(today.getDate()).padStart(2, '0');\r\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n    today = yyyy + '-' + mm + '-' + dd;\r\n\r\n    const [taskName, setTaskName] = useState('');\r\n    const [taskDate, setTaskDate] = useState(today);\r\n    const [isTitleValid, setIsTitleValid] = useState(false);\r\n    \r\n    const formHandler = (event) => {\r\n        event.preventDefault();\r\n        if(taskName.trim().length === 0){\r\n            setIsTitleValid(true);\r\n            setTaskName('Title is empty');\r\n            setTimeout(()=>{\r\n                setTaskName('')\r\n                setIsTitleValid(false);\r\n            },2000);\r\n            return;\r\n        }\r\n        const date2 = new Date();\r\n        const Difference_In_Time = (new Date(taskDate)).getTime() - (new Date(date2.toLocaleDateString()).getTime());\r\n        const Difference_In_Days = Difference_In_Time / (1000 * 3600 * 24);\r\n        const taskId = hashId(taskName);\r\n        // task object is created below for new item\r\n        const taskObj = {id:taskId,\r\n            taskTitle: taskName,\r\n            taskDaysLeft: parseInt(Difference_In_Days),\r\n            isMarked:false,\r\n            isDone:false\r\n        };\r\n\r\n        for(let obj of props.toDoList){\r\n            if(obj.id === taskId){\r\n                setIsTitleValid(true);\r\n                setTaskName('Task already exits');\r\n                setTimeout(()=>{\r\n                    setTaskName('')\r\n                    setIsTitleValid(false);\r\n                },2000);\r\n                return;\r\n            }\r\n        }\r\n        props.onSaveTaskForm(taskObj);\r\n        setTaskName('');\r\n        setTaskDate(today);\r\n        props.onClose(false);\r\n    }\r\n\r\n    const taskNameChangeHandler = (event) => {\r\n        setTaskName(event.target.value);\r\n    }\r\n    const taskDateChangeHandler = (event) => {\r\n        setTaskDate(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className='form-container'>\r\n            <form onSubmit={formHandler}>   \r\n                <div className='form-input__control'>\r\n                    <div>\r\n                        <label forhtml=\"taskname\">Task name</label>\r\n                        <input \r\n                            className={`${isTitleValid ? 'invalid-task-title':'' }`}\r\n                            id=\"taskname\" \r\n                            type=\"text\" \r\n                            value={taskName} \r\n                            placeholder=\"Enter title here\" \r\n                            onChange={taskNameChangeHandler}>\r\n                        </input>\r\n                    </div>\r\n                    <div>\r\n                        <label forhtml=\"taskdate\">Due date</label>\r\n                        <input id=\"taskdate\" type=\"date\" min={taskDate} value={taskDate} onChange={taskDateChangeHandler}></input>\r\n                    </div>\r\n                </div>\r\n                <div className='btn'>\r\n                    <button className={`btn-tag ${isTitleValid ? 'btn-disabled':''}`} disabled={isTitleValid} type=\"submit\"><h1>Add</h1></button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskForm;","import Card from './UI/Card';\r\nimport TaskForm from './TaskForm/TaskForm';\r\nimport classes from './NewTask.module.css';\r\n\r\nconst NewTask = (props) => {\r\n    const formHandler = (taskObj) => {\r\n        props.onSaveNewTask(taskObj);\r\n    }\r\n    const closeHandler = () => {\r\n        props.onNewTask(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.backdrop} onClick={props.onNewTask} ></div>\r\n            <Card className={classes['task-form-container']}>\r\n                <TaskForm onClose={closeHandler} onSaveTaskForm={formHandler} toDoList={props.allTasks}/>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewTask;","import { useState } from 'react';\r\nimport './TaskItem.css'\r\n\r\nconst TaskItem = (props) => {\r\n    const [isSelected, setSelected] = useState(false);\r\n    const taskItemHandler = (event) => {\r\n        event.stopPropagation();\r\n        setSelected(!isSelected);\r\n        props.onSelected(props.title);\r\n    }\r\n\r\n    let renderTaskItem = <p>{props.title} render task item</p>;\r\n    if(props.isDone){\r\n        renderTaskItem = (\r\n            <div className={`task-item-container task-item-container-done ${props.isMarked && \"task-item-container-done-selected\"}`} onClick={taskItemHandler}>\r\n            <div className='task-item-checkbox'>\r\n                <i className=\"fas fa-check-double\" style={props.isMarked ? {fontSize:'1rem',color:'white'} : {visibility:'hidden'}}></i>\r\n            </div>\r\n            <div className='task-data-container'>\r\n                <div className='task-title'>\r\n                    {props.title}\r\n                </div>\r\n                <div className='task-btn-container'>\r\n                    <div className='task-item-days-left'>{\"Done\"}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n    else{\r\n        renderTaskItem = (\r\n            <div className={`task-item-container ${isSelected &&  \"task-item-container-selected\"}`} onClick={taskItemHandler}>\r\n            <div className='task-item-checkbox'>\r\n                <i className=\"fas fa-check-circle checkbox\" style={isSelected ? {} : {visibility:'hidden'}} ></i>\r\n            </div>\r\n            <div className='task-data-container'>\r\n                <div className='task-title'>\r\n                    {props.title}\r\n                </div>\r\n                <div className='task-btn-container'>\r\n                    <div className='task-item-days-left'>{props.daysLeft + \" Days left\"}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n    return renderTaskItem;\r\n}\r\n\r\nexport default TaskItem;","import styles from './TaskList.module.css';\r\n\r\nconst TaskListHelp = () => {\r\n    return (\r\n        <>\r\n            <h1 className={styles['no-task']}>No Tasks Found!</h1>\r\n            <p className={styles['no-task-guide']}>\r\n                Oops ! No task found. To begin, start by adding a new task by clicking on the \r\n                plus <i className=\"fas fa-plus-circle\"></i> icon on the header section of the to-do-list.\r\n                <br/>\r\n                <br/>\r\n                To delete, first select the task(s) you want to delete and then press the \r\n                minus <i className=\"fas fa-minus-circle\"></i> icon on the header section of the to-do-list.\r\n                <br/>\r\n                <br/>\r\n                To mark tasks as done, first select the task(s) and then press the \r\n                calender <i className={`far fa-calendar-check`}></i> icon on the header section of the to-do-list.\r\n            </p>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TaskListHelp;","import { useState } from 'react';\r\n\r\nimport './TaskOption.css'\r\n\r\nconst TaskFilter = (props) =>{\r\n    const [taskFilterValue, setTaskFilterValue] = useState('all');\r\n\r\n    const filterHandler = (event) => {\r\n        setTaskFilterValue(event.target.value);\r\n        props.onTaskOption({fval:event.target.value});\r\n    }\r\n\r\n    return (\r\n        <div className=\"task-filter-container\">\r\n            <label className='option-label' forhtml=\"taskfilter\">Filter</label>\r\n            <select id=\"task-filter\" value={taskFilterValue} onChange={filterHandler}>\r\n                <option value=\"all\" >All</option>\r\n                <option value=\"mark-as-done\" >Mark as done</option>\r\n                <option value=\"not-yet-done\" >Not yet done</option>\r\n            </select>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskFilter;","import { useState } from 'react';\r\nimport './TaskOption.css';\r\n\r\nconst TaskFilter = (props) => {\r\n    const [sortFilterValue, setSortFilterValue] = useState('newest-first');\r\n\r\n    const sortHandler = (event) => {\r\n        setSortFilterValue(event.target.value);\r\n        props.onTaskOption({sval:event.target.value});\r\n    }\r\n\r\n    return (\r\n        <div className='task-sort-container'>\r\n            <label className=\"option-label\" forhtml=\"taskfilter\">Sort</label>\r\n            <select id=\"task-sort\" value={sortFilterValue} onChange={sortHandler}>\r\n                <option value=\"name\">Name</option>\r\n                <option value=\"days-left\">Days left</option>\r\n                <option value=\"newest-first\">Newest first</option>\r\n            </select>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskFilter;","import { useState } from \"react\";\r\n\r\nimport TaskFilter from \"./TaskFilter\";\r\nimport TaskSort from \"./TaskSort\";\r\nimport Card from \"../UI/Card\";\r\nimport './TaskOption.css'\r\n\r\nexport const filterList = (obj, list) => {\r\n    if(obj.fval === 'mark-as-done'){\r\n        list = list.filter(e => e.isDone === true);\r\n    }\r\n    else if(obj.fval === 'not-yet-done'){\r\n        list = list.filter(e => e.isDone === false)\r\n    }\r\n    return list;\r\n}\r\nexport const sortList = (obj, list) => {\r\n    if(obj.sval === 'name'){\r\n        list.sort((a, b) => (a.taskTitle.toLowerCase() < b.taskTitle.toLowerCase()) ? -1 : 1)\r\n    }\r\n    else if(obj.sval === 'days-left'){\r\n        list.sort((a, b) => (+a.taskDaysLeft < +b.taskDaysLeft) ? -1 : +1)\r\n    }\r\n    return list;\r\n}\r\n\r\nconst TaskOption = (props) => {\r\n    const [taskOptionValue, setTaskOptionValue] = useState({fval:'all', sval:'newest-first'});\r\n\r\n    const taskOptionHandler = (obj) => {\r\n        setTaskOptionValue((prevState) => ({...prevState, ...obj}));\r\n        props.onTaskOptionObject({...taskOptionValue, ...obj});\r\n    }\r\n\r\n    return (\r\n        <Card className=\"task-option-card\"> \r\n            <TaskFilter onTaskOption={taskOptionHandler}/>\r\n            <TaskSort onTaskOption={taskOptionHandler}/>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default TaskOption;","import React,{ useState, useEffect } from 'react';\r\nimport Card from './UI/Card';\r\nimport TaskItem from './TaskItem';\r\nimport TaskListHelp from './TaskListHelp';\r\nimport TaskOption, {filterList, sortList} from './TaskOption/TaskOption';\r\nimport styles from './TaskList.module.css';\r\n\r\nconst TaskList = (props) => {\r\n    const [taskOptionObject, setTaskOptionObject] = useState({fval:'all', sval:'newest-first'});\r\n    const [filteredSortedList, setFilteredSortedList] = useState(props.allTasks);\r\n\r\n    const isSelected = (taskTitle) => {\r\n        props.onSaveSelected(taskTitle);\r\n    }\r\n    const taskOptionObjectHandler = (obj) => {\r\n        setTaskOptionObject({...taskOptionObject, ...obj});\r\n        obj = {...taskOptionObject, ...obj};\r\n        let toDoList = [...props.allTasks];\r\n        toDoList = filterList(obj, toDoList);\r\n        toDoList = sortList(obj, toDoList);    \r\n        setFilteredSortedList(toDoList);\r\n    }\r\n    useEffect(() => {\r\n        let toDoList = [...props.allTasks];\r\n        toDoList = filterList(taskOptionObject, toDoList);\r\n        toDoList = sortList(taskOptionObject, toDoList);\r\n        setFilteredSortedList(toDoList);\r\n    }\r\n    ,[props.allTasks]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TaskOption onTaskOptionObject={taskOptionObjectHandler}/>\r\n            <Card  className={styles[\"task-list-card\"]}>\r\n                <div className={styles['task-list-container']}>\r\n                    {\r\n                        props.allTasks.length === 0 ? \r\n                        <TaskListHelp />\r\n                        : \r\n                        filteredSortedList.map( e => <TaskItem \r\n                            onSelected={isSelected}\r\n                            key={`${e.id}`}\r\n                            title={e.taskTitle}\r\n                            daysLeft={e.taskDaysLeft} \r\n                            isDone={e.isDone}\r\n                            isMarked={e.isMarked}\r\n                        />)\r\n                    }\r\n                </div>\r\n            </Card>\r\n        </React.Fragment>\r\n    ); \r\n}\r\n\r\nexport default TaskList;","import Card from '../UI/Card';\r\nimport './TaskHeader.css';\r\n\r\nconst TaskHeader = (props) => {\r\n    const deleteHandler = () => {\r\n        const toDoList = props.allTasks.filter( e => e.isMarked === false );\r\n        props.onDeletedMarked(toDoList);\r\n    }\r\n    const newTaskHandler = () => {\r\n        props.onNewTask(true);\r\n    }\r\n    const markAsDoneHandler = () => {\r\n        let toDoList = [...props.allTasks];\r\n        for(let obj of toDoList){\r\n            if(obj.isMarked === true){\r\n                obj.isDone = true;\r\n                obj.isMarked = false;\r\n            }\r\n        }\r\n        props.onMarkAsDone(toDoList);\r\n    }\r\n\r\n    return (\r\n        <Card className=\"task-header-card\">\r\n            <div className='header-container'>\r\n                <h1 className='header-title'>TO - DO LIST</h1>\r\n                <div className='header-button-container'>\r\n                    <button className='header-button' type='button' onClick={newTaskHandler} >\r\n                        <i title=\"Add new task\" className=\"fas fa-plus-circle\"></i>\r\n                    </button>\r\n                    <button className='header-button' type='button' onClick={deleteHandler} >\r\n                        <i title=\"Delete selected tasks\" className=\"fas fa-minus-circle\"></i>\r\n                    </button>\r\n                    <button className='header-button' type='button' onClick={markAsDoneHandler} >\r\n                        <i title=\"Mark selected as done\" className=\"far fa-calendar-check\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default TaskHeader;","import React, { useState } from 'react';\n\nimport NewTask from './Componets/NewTask';\nimport TaskList from './Componets/TaskList';\nimport TaskHeader from './Componets/TaskHeader/TaskHeader';\n\nfunction App() {\n  const [toDoList, setToDoList] = useState([{taskTitle:\"Learn React\", taskDaysLeft:13, isMarked:false, isDone:false}]);\n  const [overlay, setOverlay] = useState(false);\n\n  const newTaskHandler = (taskObj) => {\n    setToDoList( prev => [taskObj, ...prev]);\n  }\n  const selectedHandler = (taskTitle) => {\n    const selectedList = [...toDoList];\n    for(let obj of selectedList){\n      if(obj.taskTitle === taskTitle){\n        obj.isMarked = !obj.isMarked;\n      }\n    }\n    setToDoList(selectedList);\n  }\n  const taskOverlayHandler = (val) => {\n    val = (val===true ? val : false)\n    setOverlay(val);\n  }\n  const deleteHandler = (toDoList) => {\n    setToDoList(toDoList);\n  }\n  const markAsDoneHandler = (toDoList) => {\n    setToDoList(toDoList);\n  }\n\n  return (\n    <div>\n      <TaskHeader onNewTask={taskOverlayHandler} onDeletedMarked={deleteHandler} onMarkAsDone={markAsDoneHandler} allTasks={toDoList} />\n      {overlay && <NewTask onNewTask={taskOverlayHandler} onSaveNewTask={newTaskHandler} allTasks={toDoList} />}\n      <TaskList onSaveSelected={selectedHandler} allTasks={toDoList} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}