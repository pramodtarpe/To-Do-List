{"version":3,"sources":["Componets/TaskList.module.css","Componets/NewTask.module.css","Componets/UI/Card.module.css","Componets/UI/Card.js","Componets/TaskForm/TaskForm.js","Componets/NewTask.js","Componets/TaskItem.js","Componets/TaskList.js","Componets/TaskHeader/TaskHeader.js","App.js","index.js"],"names":["module","exports","Card","props","className","cssCard","card","children","TaskForm","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","useState","taskName","setTaskName","taskDate","setTaskDate","onSubmit","event","preventDefault","trim","length","date2","Difference_In_Days","getTime","toLocaleDateString","taskId","string","hash","i","charCodeAt","hashId","taskObj","id","taskTitle","taskDaysLeft","parseInt","isMarked","isDone","toDoList","console","log","onSaveTaskForm","onClose","forhtml","type","value","onChange","target","min","NewTask","classes","backdrop","onClick","onNewTask","onSaveNewTask","allTasks","TaskItem","isSelected","setSelected","taskItemHandler","stopPropagation","onSelected","title","style","fontSize","color","visibility","daysLeft","TaskList","onSaveSelected","renderItem","map","e","styles","TaskHeader","filter","onDeletedMarked","obj","onMarkAsDone","App","setToDoList","overlay","setOverlay","taskOverlayHandler","val","prev","selectedList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee08c0e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"task-list-card\":\"TaskList_task-list-card__95RAJ\",\"task-list-container\":\"TaskList_task-list-container__2Cn1x\",\"no-task\":\"TaskList_no-task__VGpDd\",\"no-task-guide\":\"TaskList_no-task-guide__2Pbus\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"NewTask_backdrop__3W_uN\",\"task-form-container\":\"NewTask_task-form-container__1qkyn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2zX8D\"};","import cssCard from './Card.module.css';\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className={`${cssCard.card} ${props.className}`}>{props.children}</div>\r\n    );\r\n\r\n}\r\n\r\nexport default Card;","import React, { useState } from \"react\";\r\n\r\nimport './TaskForm.css'\r\n\r\nconst hashId = (string) => {\r\n    let MOD = 18446744073709551617;\r\n    let hash = 0;\r\n    if (string.length === 0) return hash;\r\n    for (let i = 0; i < string.length; i++) {\r\n        let char = string.charCodeAt(i);\r\n        hash = ((hash*257) + (char)) % MOD;\r\n    }\r\n    return hash;\r\n}\r\n\r\nconst TaskForm = (props) => {\r\n    var today = new Date();\r\n    var dd = String(today.getDate()).padStart(2, '0');\r\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n    today = yyyy + '-' + mm + '-' + dd;\r\n\r\n    const [taskName, setTaskName] = useState('');\r\n    const [taskDate, setTaskDate] = useState(today);\r\n    \r\n    const formHandler = (event) => {\r\n        event.preventDefault();\r\n        if(taskName.trim().length === 0) return;\r\n        const date2 = new Date();\r\n        const Difference_In_Time = (new Date(taskDate)).getTime() - (new Date(date2.toLocaleDateString()).getTime());\r\n        const Difference_In_Days = Difference_In_Time / (1000 * 3600 * 24);\r\n        const taskId = hashId(taskName);\r\n        // task object is created below for new item\r\n        const taskObj = {id:taskId,\r\n            taskTitle: taskName,\r\n            taskDaysLeft: parseInt(Difference_In_Days),\r\n            isMarked:false,\r\n            isDone:false\r\n        };\r\n\r\n        for(let obj of props.toDoList){\r\n            if(obj.id === taskId){\r\n                console.log('Task with same id already exits');\r\n                return;\r\n            } \r\n        }\r\n        props.onSaveTaskForm(taskObj);\r\n        setTaskName('');\r\n        setTaskDate(today);\r\n        props.onClose(false);\r\n    }\r\n\r\n    const taskNameChangeHandler = (event) => {\r\n        setTaskName(event.target.value);\r\n    }\r\n    const taskDateChangeHandler = (event) => {\r\n        setTaskDate(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className='form-container'>\r\n            <form onSubmit={formHandler}>   \r\n                <div className='form-input__control'>\r\n                    <div>\r\n                        <label forhtml=\"taskname\">Task name</label>\r\n                        <input id=\"taskname\" type=\"text\" value={taskName} onChange={taskNameChangeHandler}></input>\r\n                    </div>\r\n                    <div>\r\n                        <label forhtml=\"taskdate\">Due date</label>\r\n                        <input id=\"taskdate\" type=\"date\" min={taskDate} value={taskDate} onChange={taskDateChangeHandler}></input>\r\n                    </div>\r\n                </div>\r\n                <div className='btn'>\r\n                    <button className='btn-tag' type=\"submit\"><h1>Add</h1></button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskForm;","import Card from './UI/Card';\r\nimport TaskForm from './TaskForm/TaskForm';\r\nimport classes from './NewTask.module.css';\r\n\r\nconst NewTask = (props) => {\r\n    const formHandler = (taskObj) => {\r\n        props.onSaveNewTask(taskObj);\r\n    }\r\n    const closeHandler = () => {\r\n        props.onNewTask(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.backdrop} onClick={props.onNewTask} ></div>\r\n            <Card className={classes['task-form-container']}>\r\n                <TaskForm onClose={closeHandler} onSaveTaskForm={formHandler} toDoList={props.allTasks}/>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewTask;","import { useState } from 'react';\r\nimport './TaskItem.css'\r\n\r\nconst TaskItem = (props) => {\r\n    const [isSelected, setSelected] = useState(false);\r\n    const taskItemHandler = (event) => {\r\n        event.stopPropagation();\r\n        setSelected(!isSelected);\r\n        props.onSelected(props.title);\r\n    }\r\n\r\n    let renderTaskItem = <p>{props.title} render task item</p>;\r\n    if(props.isDone){\r\n        renderTaskItem = (\r\n            <div className={`task-item-container task-item-container-done ${props.isMarked && \"task-item-container-done-selected\"}`} onClick={taskItemHandler}>\r\n            <div className='task-item-checkbox'>\r\n                <i className=\"fas fa-check-double\" style={props.isMarked ? {fontSize:'1rem',color:'white'} : {visibility:'hidden'}}></i>\r\n            </div>\r\n            <div className='task-data-container'>\r\n                <div className='task-title'>\r\n                    {props.title}\r\n                </div>\r\n                <div className='task-btn-container'>\r\n                    <div className='task-item-days-left'>{\"Done\"}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n    else{\r\n        renderTaskItem = (\r\n            <div className={`task-item-container ${isSelected &&  \"task-item-container-selected\"}`} onClick={taskItemHandler}>\r\n            <div className='task-item-checkbox'>\r\n                <i className=\"fas fa-check-circle checkbox\" style={isSelected ? {} : {visibility:'hidden'}} ></i>\r\n            </div>\r\n            <div className='task-data-container'>\r\n                <div className='task-title'>\r\n                    {props.title}\r\n                </div>\r\n                <div className='task-btn-container'>\r\n                    <div className='task-item-days-left'>{props.daysLeft + \" Days left\"}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n    return renderTaskItem;\r\n}\r\n\r\nexport default TaskItem;","import Card from './UI/Card';\r\nimport TaskItem from './TaskItem';\r\n\r\nimport styles from './TaskList.module.css';\r\n\r\nconst TaskList = (props) => {\r\n    const toDoList = props.allTasks;\r\n    const isSelected = (taskTitle) => {\r\n        props.onSaveSelected(taskTitle);\r\n    }\r\n    let renderItem = toDoList.map( e => <TaskItem \r\n            onSelected={isSelected}\r\n            key={`${e.id}`}\r\n            title={e.taskTitle}\r\n            daysLeft={e.taskDaysLeft} \r\n            isDone={e.isDone}\r\n            isMarked={e.isMarked}\r\n        /> );\r\n    if(toDoList.length === 0){\r\n        renderItem = <>\r\n            <h1 className={styles['no-task']}>No Tasks Found!</h1>\r\n            <p className={styles['no-task-guide']}>\r\n                Oops ! No task found. To begin, start by adding a new task by clicking on the \r\n                plus <i className=\"fas fa-plus-circle\"></i> icon on the header section of the to-do-list.\r\n                <br/>\r\n                <br/>\r\n                To delete, first select the task(s) you want to delete and then press the \r\n                minus <i className=\"fas fa-minus-circle\"></i> icon on the header section of the to-do-list.\r\n                <br/>\r\n                <br/>\r\n                To mark tasks as done, first select the task(s) and then press the \r\n                calender <i className={`far fa-calendar-check`}></i> icon on the header section of the to-do-list.\r\n            </p>\r\n        </>\r\n    }\r\n    return (\r\n        <Card  className={styles[\"task-list-card\"]}>\r\n            <div className={styles['task-list-container']}>\r\n                {renderItem}\r\n            </div>\r\n        </Card>\r\n    ); \r\n}\r\n\r\nexport default TaskList;","import Card from '../UI/Card';\r\nimport './TaskHeader.css';\r\n\r\nconst TaskHeader = (props) => {\r\n    const deleteHandler = () => {\r\n        const toDoList = props.allTasks.filter( e => e.isMarked === false );\r\n        props.onDeletedMarked(toDoList);\r\n    }\r\n    const newTaskHandler = () => {\r\n        props.onNewTask(true);\r\n    }\r\n    const markAsDoneHandler = () => {\r\n        let toDoList = [...props.allTasks];\r\n        for(let obj of toDoList){\r\n            if(obj.isMarked === true){\r\n                obj.isDone = true;\r\n                obj.isMarked = false;\r\n            }\r\n        }\r\n        props.onMarkAsDone(toDoList);\r\n    }\r\n\r\n    return (\r\n        <Card className=\"task-header-card\">\r\n            <div className='header-container'>\r\n                <h1 className='header-title'>TO - DO LIST</h1>\r\n                <div className='header-button-container'>\r\n                    <button className='header-button' type='button' onClick={newTaskHandler} >\r\n                        <i className=\"fas fa-plus-circle\"></i>\r\n                    </button>\r\n                    <button className='header-button' type='button' onClick={deleteHandler} >\r\n                        <i className=\"fas fa-minus-circle\"></i>\r\n                    </button>\r\n                    <button className='header-button' type='button' onClick={markAsDoneHandler} >\r\n                        <i className=\"far fa-calendar-check\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default TaskHeader;","import React, { useState } from 'react';\n\nimport NewTask from './Componets/NewTask';\nimport TaskList from './Componets/TaskList';\nimport TaskHeader from './Componets/TaskHeader/TaskHeader';\n\nfunction App() {\n  const [toDoList, setToDoList] = useState([{taskTitle:\"Learn React\", taskDaysLeft:\"13\", isMarked:false, isDone:false}]);\n  const [overlay, setOverlay] = useState(false);\n\n  const newTaskHandler = (taskObj) => {\n    setToDoList( prev => [taskObj, ...prev]);\n  }\n  const selectedHandler = (taskTitle) => {\n    const selectedList = [...toDoList];\n    for(let obj of selectedList){\n      if(obj.taskTitle === taskTitle){\n        obj.isMarked = !obj.isMarked;\n      }\n    }\n    setToDoList(selectedList);\n  }\n  const taskOverlayHandler = (val) => {\n    val = (val===true ? val : false)\n    setOverlay(val);\n  }\n  const deleteHandler = (toDoList) => {\n    setToDoList(toDoList);\n  }\n  const markAsDoneHandler = (toDoList) => {\n    setToDoList(toDoList);\n  }\n  \n  return (\n    <div>\n      <TaskHeader onNewTask={taskOverlayHandler} onDeletedMarked={deleteHandler} onMarkAsDone={markAsDoneHandler} allTasks={toDoList} />\n      {overlay && <NewTask onNewTask={taskOverlayHandler} onSaveNewTask={newTaskHandler} allTasks={toDoList} />}\n      <TaskList onSaveSelected={selectedHandler} allTasks={toDoList} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}